{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","keyword","setKeyword","useState","history","useHistory","_jsxs","Form","onSubmit","e","preventDefault","push","concat","location","pathname","inline","children","_jsx","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","removeItem","isAdmin","Footer","Row","Col","Rating","_ref","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","addToCartHandler","disabled","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","placeOrder","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","addPayPalScript","script","document","createElement","onload","body","appendChild","Id","href","isDelivered","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","App","Router","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.70bebbbf.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Digital Store</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Digital Store</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}